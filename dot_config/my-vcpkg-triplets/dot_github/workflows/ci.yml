name: CI

on:
  push:
    branches: [ master ]
    paths-ignore:
        - '**.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**.md'

env:
  VCPKG_NUGET_REPOSITORY: https://github.com/Neumann-A/my-vcpkg-packages.git
jobs:
  job:
    name: ${{ matrix.name }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        name: [x64-win-llvm-release, x64-win-llvm-san, x64-win-llvm-san-static-md, x64-win-llvm-lto, x64-win-llvm-lto-static, x64-win-llvm-lto-san, x64-win-llvm-lto-san-static-md]
        include: 
          - mono: ''
          - rmdir: 'Remove-Item -Recurse -Force -Path'

    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.name }}
      VCPKG_DEFAULT_HOST_TRIPLET: ${{ matrix.name }}
      VCPKG_OVERLAY_TRIPLETS: ${{ github.workspace }}
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite;files,${{ github.workspace }}/vcpkg_cache'
      VCPKG_DISABLE_METRICS: '1'
      BASH_ENV: .github/workflows/bashrc

    steps:
      - name: Checkout Triplets
        uses: actions/checkout@v3

      - name: Checkout vcpkg
        uses: actions/checkout@v3
        with:
          repository: microsoft/vcpkg
          path: vcpkg
          ref: 'e51afe4695ebf5e6c6f523dbd3bb518db1970531'

      # Install latest CMake
      - uses: lukka/get-cmake@v3.25.1

      - name: Setup VS cmd
        uses: ilammy/msvc-dev-cmd@v1

      - name: Few PATH variables
        shell: bash
        run: |
          echo GITHUB_WORKSPACE:${{ github.workspace }}
          echo HOME: $HOME
          echo buildDir: ${{ env.buildDir }}
          echo GITHUB_ENV: $GITHUB_ENV
          ls

      - name: Cache vcpkg downloads. 
        uses: pat-s/always-upload-cache@v3
        with:
          path: |
            ${{ github.workspace }}/vcpkg/downloads
          key: ${{ matrix.name }}-vcpkg-downloads

      - name: Cache vcpkg executable. 
        id: cache-vcpkg-executable
        uses: pat-s/always-upload-cache@v3
        with:
          path: |
            ${{ github.workspace }}/vcpkg/vcpkg
            ${{ github.workspace }}/vcpkg/vcpkg.exe
          key: ${{ matrix.name }}-${{ hashFiles('vcpkg/scripts/bootstrap.*') }}

      - name: Bootstrap vcpkg
        run: > 
          cmake 
          -D VCPKG_ROOT=${{ github.workspace }}/vcpkg
          -P ${{ github.workspace }}/.github/workflows/cmake/bootstrap-vcpkg.cmake

      # This step assumes `vcpkg` has been bootstrapped (run `./vcpkg/bootstrap-vcpkg`)
      - name: 'Setup NuGet Credentials'
        shell: 'bash'
        run: >
          ${{ matrix.mono }} `./vcpkg/vcpkg fetch nuget | tail -n 1`
          sources add
          -source "https://nuget.pkg.github.com/Neumann-A/index.json"
          -storepasswordincleartext
          -name "GitHub"
          -username "Neumann-A"
          -password "${{ secrets.CI_ACCESS_PAT }}"

      - name: 'Setup NuGet APIKey'
        shell: 'bash'
        run: >
          ${{ matrix.mono }} `./vcpkg/vcpkg fetch nuget | tail -n 1`
          setapikey 
          ${{ secrets.CI_ACCESS_PAT }}
          -Source "https://nuget.pkg.github.com/Neumann-A/index.json"

      - name: 'Test CMake build'
        run: ${{ github.workspace }}/vcpkg/vcpkg.exe install zlib --debug

      - name: 'Test Autotools build'
        run: ${{ github.workspace }}/vcpkg/vcpkg.exe install hwloc

      - name: 'Test meson build'
        run: ${{ github.workspace }}/vcpkg/vcpkg.exe install fribidi

      - name: collect vcpkg build logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}-vcpkg-buildtrees
          path: |
            ${{ github.workspace }}/vcpkg/buildtrees/**/*.log
          retention-days: 2

      - name: 'Cleanup vcpkg artifacts'
        run: |
          ${{ matrix.rmdir }} ${{ github.workspace }}/vcpkg/buildtrees
          ${{ matrix.rmdir }} ${{ github.workspace }}/vcpkg/packages
